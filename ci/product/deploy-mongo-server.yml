apiVersion: v1
kind: Service
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: slackbot-server-db.vela.decc.vmware.com
  name: slackbot-server-db-prd
  labels:
    app.name: slackbot-server-db-prd
spec:
  type: LoadBalancer
  selector:
    role: mongo-prd
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-prd
  labels:
    name: mongo-prd
spec:
  type: NodePort
  selector:
    role: mongo-prd
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo-prd
spec:
  selector:
    matchLabels:
      role: mongo-prd
      environment: product
  serviceName: "mongo"
  replicas: 1
  template:
    metadata:
      labels:
        role: mongo-prd
        environment: product
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: mongo-prd
        image: wcp-docker-local.artifactory.eng.vmware.com/mongo:4.0
        command: ["mongod"]
        args:
          - "--bind_ip"
          - "0.0.0.0"
          - "--smallfiles"
          - "--noprealloc"
        ports:
          - containerPort: 27017
        volumeMounts:
          - name: mongo-persistent-storage-prd
            mountPath: /data/db
        resources:
          requests:
            memory: "100Mi"
            cpu: "100m"
          limits:
            memory: "200Mi"
            cpu: "200m"
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-storage-prd
      annotations:
        volume.beta.kubernetes.io/storage-class: a6af3016ed5741ebb0d26038bf9e1773
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Gi
